import multiprocessing

import time
def wait():
    time.sleep(0.5)
    print("Done waiting")

process = multiprocessing.Process(target=wait)

# Add code here
process.start()
print("Finished")

process.join()

import time
def wait():
    time.sleep(0.5)
    print("Done waiting")

process = multiprocessing.Process(target=wait)

# Add code below
process.start()
process.join()
print("Finished")

import time
def wait():
    time.sleep(0.5)
    print("Done waiting")

# Add code below
start = time.time()

p1 = multiprocessing.Process(target=wait)
p2 = multiprocessing.Process(target=wait)

p1.start()
p2.start()

p1.join()
p2.join()

end = time.time()

elapsed = end - start

import time
def wait():
    time.sleep(0.5)
    print("Done waiting")

# Add code below
start = time.time()

processes = [multiprocessing.Process(target=wait) for _ in range(6)]

for process in processes:
    process.start()

for process in processes:
    process.join()

end = time.time()

elapsed = end - start

def sum3(x, y, z):
    print(x + y + z)

def list_average(values):
    print(sum(values) / len(values))

# Add code below
sum3_process = multiprocessing.Process(target=sum3, args=[3, 2, 5])
list_average_process = multiprocessing.Process(target=list_average, args=[[1, 2, 3, 4, 5]])

sum3_process.start()
list_average_process.start()

sum3_process.join()
list_average_process.join()

def sum3(x, y, z):
    print(x + y + z)
def sum3(x, y, z, shared_value):
    shared_value.value = x + y + z

float_value = multiprocessing.Value("f")
process = multiprocessing.Process(target=sum3, args=[5, 7, 4, float_value])
process.start()
process.join()

print(float_value.value)
